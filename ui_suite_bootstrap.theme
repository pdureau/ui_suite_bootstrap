<?php

/**
 * @file
 * Functions to support theming in the ui_suite_bootstrap theme.
 */

declare(strict_types = 1);

/**
 * Add expected class to links.
 *
 * @param mixed $item
 *   The render element.
 * @param string $class
 *   The CSS class to add.
 */
function _ui_suite_bootstrap_add_link_class(&$item, string $class): void {
  if (is_array($item) && array_key_exists('#type', $item)) {
    if ($item['#type'] === 'link') {
      $item['#attributes']['class'][] = $class;
    }
    if ($item['#type'] === 'html_tag' && $item['#tag'] === 'a') {
      $item['#attributes']['class'][] = $class;
    }
  }
  if (is_array($item)) {
    foreach ($item as &$next) {
      _ui_suite_bootstrap_add_link_class($next, $class);
    }
  }
}

/**
 * Add expected class to images.
 *
 * @param mixed $item
 *   The render element.
 * @param string $class
 *   The CSS class to add.
 */
function _ui_suite_bootstrap_add_image_class(&$item, string $class): void {
  if (is_array($item) && array_key_exists('#theme', $item)) {
    if ($item['#theme'] === 'image') {
      $item['#attributes']['class'][] = $class;
    }
    if ($item['#theme'] === 'image_formatter') {
      $item['#item_attributes']['class'][] = $class;
    }
  }
  if (is_array($item)) {
    foreach ($item as &$next) {
      _ui_suite_bootstrap_add_image_class($next, $class);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for 'page'.
 */
function ui_suite_bootstrap_preprocess_page(array &$variables): void {
  // Will be replaced by UI Skins.
  $variables['container'] = 'container';
}

/**
 * Implements hook_preprocess_HOOK() for 'pattern_card'.
 *
 * See also: https://getbootstrap.com/docs/4.6/components/card/.
 */
function ui_suite_bootstrap_preprocess_pattern_card(array &$variables): void {
  if (array_key_exists('image', $variables) && is_array($variables['image'])) {
    foreach ($variables['image'] as &$item) {
      $class = 'card-img-top';
      if ($variables['variant'] === 'overlay') {
        $class = 'card-img';
      }
      _ui_suite_bootstrap_add_image_class($item, $class);
    }
  }
  if (array_key_exists('links', $variables) && is_array($variables['links'])) {
    foreach ($variables['links'] as &$item) {
      _ui_suite_bootstrap_add_link_class($item, 'card-link');
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for 'pattern_carousel'.
 *
 * See also: https://getbootstrap.com/docs/4.6/components/carousel/.
 */
function ui_suite_bootstrap_preprocess_pattern_carousel(array &$variables): void {
  // Nicer preview with fixed width.
  if ($variables['context']->getType() == 'preview') {
    $variables['attributes']['style'] = "width: 800px";
  }
}

/**
 * Implements hook_preprocess_HOOK() for 'pattern_figure'.
 *
 * See also: https://getbootstrap.com/docs/4.6/components/figures/.
 */
function ui_suite_bootstrap_preprocess_pattern_figure(array &$variables): void {
  if (array_key_exists('image', $variables) && is_array($variables['image'])) {
    foreach ($variables['image'] as &$item) {
      _ui_suite_bootstrap_add_image_class($item, 'figure-img');
    }
  }
}

/*
 * Implements hook_preprocess_HOOK() for 'pattern_pagination'.
 *
 * See also: https://getbootstrap.com/docs/4.6/components/pagination/.
 */
function ui_suite_bootstrap_preprocess_pattern_pagination(array &$variables): void {
  $variables['current'] = (int) (string) $variables['current'];
}

/*
 * Implements hook_preprocess_HOOK() for 'image'.
 *
 * Convert relative path to full path for card, carousel & figure previews.
 */
function ui_suite_bootstrap_preprocess_image(array &$variables): void {
  $uri = $variables["uri"];
  $is_absolute = isset(parse_url($uri)['host']) || \str_starts_with($uri, "/") || \str_starts_with($uri, "data:");
  if (!$is_absolute) {
    $variables["attributes"]["src"] = base_path() . $variables["directory"] . "/" . $uri;
  }
}
